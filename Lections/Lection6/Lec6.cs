using Microsoft.VisualBasic;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using static System.Runtime.InteropServices.JavaScript.JSType;

namespace NetworkApplicationDevelopmentServer.Lections.Lection6
{
    internal class Lec6
    {
        // Виды тестирования
        // ● Модульное тестирование (Unit Testing)
        // ● Интеграционное тестирование(Integration Testing)
        // ● Функциональное тестирование(Functional Testing)
        // ● Приемочное тестирование(Acceptance Testing)
        // ● Испытание на проникновение(Penetration Testing)
        // ● Нагрузочное тестирование(Load Testing)
        // ● Тестирование безопасности(Security Testing)
        // ● Манипуляционное тестирование(Manipulation Testing)
        // ● Автоматизированное тестирование(Automated Testing)

        // Для разраба - Модульное тестирование (Unit Testing). Процесс тестирования отдельных модулей
        // или компонентов программного обеспечения для обеспечения их корректности и соответствия ожиданиям.

        // Kлючевые понятия и принципы модульного тестирования:
        // ● Тестовый кейс (тест-кейс)
        // ● Изоляция
        // ● Автоматизация
        // ● Ассерты(утверждения)
        // ● Покрытие кода
        // ● Регрессионное тестирование
        // ● Фиктивные объекты(Моки)

        // Модульное тестирование. Этапы
        // ● Выбор модуля для тестирования
        // ● Подготовка тестовых данных
        // ● Написание тестовых случаев(тест-кейсов)
        // ● Настройка окружения тестирования
        // ● Выполнение тестовых случаев
        // ● Проверка результатов(assertions)
        // ● Завершение и очистка
        // ● Отчеты и анализ результатов
        // ● Исправление ошибок
        // ● Повторение
        // ● Покрытие кода
        // ● Документация
        // ● Интеграция в процесс разработки

        // Assert - Класс, предоставляющий методы для поддержки тестирования.

        // Мокирование. Мокирование позволяет заменить реальные объекты заглушками, отдающими тестовые данные. 



        public void Run()
        {
            
        }
    }
}
